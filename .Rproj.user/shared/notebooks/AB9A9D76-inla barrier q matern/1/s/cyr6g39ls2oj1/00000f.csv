"0","inla.barrier.pcmatern.plus <- function (mesh, barrier.triangles, prior.range, prior.sigma, "
"0","    range.fraction = 0.2) "
"0","{"
"0","    if (missing(prior.range)) {"
"0","        warning(""Arbitrary prior values chosen automatically. This may suffice for a first attempt, \n            but should be changed in any serious analysis."")"
"0","        prior.range <- c(diff(range(mesh$loc[, 1]))/5, 0.5)"
"0","    }"
"0","    if (missing(prior.sigma)) {"
"0","        prior.sigma <- c(1, 0.5) "
"0","    }"
"0","    stopifnot(inherits(mesh, ""inla.mesh""))"
"0","    stopifnot(range.fraction > 1e-06)"
"0","#    if (requireNamespace(""INLAspacetime"")) {"
"0","#        warning(""Using implementation from the `INLAspacetime` package"")"
"0","#        return(INLAspacetime::barrierModel.define(mesh = mesh, "
"0","#            barrier.triangles = barrier.triangles, prior.range = prior.range, "
"0","#            prior.sigma = prior.sigma, range.fraction = range.fraction))"
"0","#    }"
"0","#    else {"
"0","#        warning(paste(""Please install the `INLAspacetime` package\n"", "
"0","#            ""which contains an implementation that runs faster!""))"
"0","#    }"
"0","    barrier.rgeneric.model <- function(cmd = c(""graph"", ""Q"", "
"0","        ""mu"", ""initial"", ""log.norm.const"", ""log.prior"", ""quit""), "
"0","        theta = NULL) {"
"0","        envir = parent.env(environment())"
"0","        prior.sigma <- obj$prior.sigma"
"0","        prior.range <- obj$prior.range"
"0","        fem <- obj$fem"
"0","        inla.barrier.q <- obj$inla.barrier.q.plus"
"0","        range.fraction <- obj$range.fraction"
"0","        initial <- function(theta) {"
"0","            initial.theta <- c()"
"0","            if (!is.na(prior.sigma[2])) {"
"0","                initial.theta <- c(0, initial.theta)"
"0","            }"
"0","            if (!is.na(prior.range[2])) {"
"0","                initial.theta <- c(initial.theta, 0)"
"0","            }"
"0","            return(initial.theta)"
"0","        }"
"0","        log.prior <- function(theta) {"
"0","            val <- 0"
"0","            if (!is.na(prior.sigma[2])) {"
"0","                lambda0 <- -log(prior.sigma[2])/prior.sigma[1]"
"0","                val <- val + log(lambda0) - lambda0 * exp(theta[1]) + "
"0","                  theta[1]"
"0","                theta.ran <- theta[-1]"
"0","            }"
"0","            else {"
"0","                theta.ran <- theta"
"0","            }"
"0","            if (!is.na(prior.range[2])) {"
"0","                lambda1 <- -log(prior.range[2]) * prior.range[1]"
"0","                for (logrange in theta.ran) {"
"0","                  val <- val + log(lambda1) - lambda1 * exp(-logrange) + "
"0","                    -logrange"
"0","                }"
"0","            }"
"0","            return(val)"
"0","        }"
"0","        Q <- function(theta) {"
"0","            theta.full <- theta"
"0","            if (is.na(prior.sigma[2])) {"
"0","                theta.full <- c(log(prior.sigma[1]), theta.full)"
"0","            }"
"0","            if (is.na(prior.range[2])) {"
"0","                theta.full <- c(theta.full, log(prior.range[1]))"
"0","            }"
"0","            stopifnot(length(theta.full) == 2)"
"0","            Q <- inla.barrier.q.plus(fem = fem, ranges = exp(theta.full[2]) * "
"0","                c(1, range.fraction), sigma = exp(theta.full[1]), "
"0","                envir = envir)"
"0","            return(Q)"
"0","        }"
"0","        graph <- function(theta) {"
"0","            require(methods)"
"0","            ntheta <- 2"
"0","            theta.full <- (1:ntheta)/3.217233456"
"0","            G1 <- inla.barrier.q.plus(fem = fem, ranges = exp(theta.full[2]) * "
"0","                c(1, range.fraction), sigma = exp(theta.full[1]))"
"0","            G1[G1 != 0] <- 1"
"0","            theta.full <- (1:ntheta)^2/12.1543534"
"0","            G2 <- inla.barrier.q.plus(fem = fem, ranges = exp(theta.full[2]) * "
"0","                c(1, range.fraction), sigma = exp(theta.full[1]))"
"0","            G2[G2 != 0] <- 1"
"0","            return(G1 + G2)"
"0","        }"
"0","        mu <- function(theta) numeric(0)"
"0","        log.norm.const <- function(theta) numeric(0)"
"0","        quit <- function(theta) invisible()"
"0","        val <- do.call(match.arg(cmd), args = list(theta))"
"0","        return(val)"
"0","    }"
"0","#   barrier.triangles <- unique(barrier.triangles)"
"0","    obj <- list()"
"0","    obj$prior.sigma <- prior.sigma"
"0","    obj$prior.range <- prior.range"
"0","    obj$range.fraction <- range.fraction"
"0","    obj$inla.barrier.q <- inla.barrier.q.plus"
"0","    obj$fem <- inla.barrier.fem.plus(mesh, barrier.triangles = barrier.triangles)"
"0","    barrier.model <- inla.rgeneric.define(model = barrier.rgeneric.model, "
"0","        optimize = TRUE, obj = obj)"
"0","    if (!is.na(prior.sigma[2]) && !is.na(prior.range[2])) {"
"0","    }"
"0","    else {"
"0","        warning(""Not properly tested, let us know if you have problems."")"
"0","    }"
"0","    return(barrier.model)"
"0","}"
